#!/bin/bash

set -e

# Set default params
dry=true
debug=false

# Parse command line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -v) debug=true ;;
        -y) dry=false ;;
    esac
    shift
done

command_prefix="echo RUN -> "
if [[ "$dry" == false ]]; then
	read -n 1 -p "This is not a dry run! Type y to continue: " confirm
	if [[ "$confirm" != "y" ]]; then
		exit 0
	fi;
	command_prefix=""
else
	echo "This is a dry run; to run the real deal, add command argument: -y"
fi;

if [[ "$debug" == true ]]; then
	echo "Enabling debug"
	set -x
else
	echo "Debug disabled; to enable, add command argument: -v"
fi;

function mountDevice {
	device=$1
	$command_prefix mkdir -p /mnt/$device
	if [[ $(mount | grep /mnt/$device) ]]; then
		echo "$device already mounted"
	else
		$command_prefix mount /dev/$device /mnt/$device
	fi;
}

function umountDevice {
	device=$1
	if [[ $(mount | grep /mnt/$device) ]]; then
		$command_prefix umount /mnt/$device
		$command_prefix rmdir /mnt/$device
	fi;
}

function syncFromTo {
	from=$1
	to=$2
	opts=$3
	umountDevice $from
	umountDevice $to
	mountDevice $from
	mountDevice $to
	# TODO: maybe mount source device as read only

	echo "start sync $from to $to"
	if [[ $opts == "delete" ]]; then
		$command_prefix rsync -axHAWXS --numeric-ids --info=progress2 \
		--delete --delete-excluded --exclude='/.gvfs/' --exclude="/mnt/" \
		/mnt/$from/ /mnt/$to/
	else
		$command_prefix rsync -axHAWXS --numeric-ids --info=progress2 \
		--delete-excluded --exclude='/.gvfs/' --exclude="/mnt/" \
		/mnt/$from/ /mnt/$to/
	fi;
	echo "done sync $from to $to"

	umountDevice $from
	umountDevice $to
}

# backup system primary
syncFromTo sda1 sdb1 delete
syncFromTo sda5 sdb5 delete

# backup system secondary
syncFromTo sdb1 sdc1 delete
syncFromTo sdb5 sdc2 delete

# TODO: option to choose target at runtime: primary system, secondary system, primary storage, secondary storage

